<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="com.sms.dao.AuditingDao" >

	<resultMap type="Auditing" 							id="resultAuditing">
		<result column="auditing_id"					property="auditingId" />   
		<result column="account_no"						property="accountNo" />
		<result column="merchant_name_abbreviation"		property="merchantNameAbbreviation" />
		<result column="account_type"					property="accountType" />
		<result column="order_flag"						property="orderFlag" />
		<result column="reservation_datetime"			property="reservationDatetime" />
		<result column="batch_no"						property="batchNo" />
		<result column="mobile"							property="mobile" />
		<result column="sms_content"					property="smsContent" />
		<result column="sms_count"						property="smsCount" />
		<result column="sms_unit_count"					property="smsUnitCount" />
		<result column="sms_account_num"				property="smsAccountNum" />
		<result column="auditing_status"				property="auditingStatus" />
		<result column="auditing_operator"				property="auditingOperator" />
		<result column="registrars"						property="regiStrars" />
		<result column="create_datetime"				property="createDatetime" />
		<result column="auditing_datetime"				property="auditingDatetime" />
		<result column="cost_tip"						property="costTip" />
		<result column="sign_tip"						property="signTip" />
  	</resultMap>
	
	<sql id="select">
		select
			t.auditing_id,t.account_no,t.merchant_name_abbreviation,t.account_type,t.order_flag,t.reservation_datetime,t.batch_no,
			t.mobile,t.sms_content,t.sms_count,t.sms_unit_count,t.sms_account_num,t.auditing_status,t.auditing_operator,t.registrars,
			t.create_datetime,t.auditing_datetime,t.cost_tip,t.sign_tip
		from
			s_auditing t
	</sql>
	
	<update id="updateInitToNew">
		update 
			s_auditing t
		set 
			t.auditing_status = #{newS}
		where
			t.auditing_status = #{init} and t.auditing_id = #{auditingId}
	</update>
	
	<insert id="insert" parameterType="Auditing" useGeneratedKeys="true" keyProperty="auditingId">
		insert into
			s_auditing (account_no, merchant_name_abbreviation, account_type, order_flag,reservation_datetime,batch_no,mobile,sms_content,
			sms_count,sms_unit_count,sms_account_num,auditing_status,auditing_operator,registrars,create_datetime,auditing_datetime,sign_tip)
		values (#{accountNo}, #{merchantNameAbbreviation}, #{accountType},#{orderFlag},#{reservationDatetime},#{batchNo},
			#{mobile},#{smsContent},#{smsCount},#{smsUnitCount},#{smsAccountNum},#{auditingStatus},#{auditingOperator},#{regiStrars},current_timestamp(),#{auditingDatetime},#{signTip})
	</insert>
    
    <select id="getById" parameterType="long" resultMap="resultAuditing">
		<include refid="select" />
		WHERE T.auditing_id = #{auditingId}
	</select>
	
	<insert id="insertBatch" >
		insert into
			s_auditing (account_no, merchant_name_abbreviation, account_type, order_flag,reservation_datetime,batch_no,mobile,sms_content,
			sms_count,sms_unit_count,sms_account_num,auditing_status,auditing_operator,registrars,create_datetime,auditing_datetime,sign_tip)
		values
		<foreach collection="strs" item="str" index="index" separator=",">
			(#{auditing.accountNo}, #{auditing.merchantNameAbbreviation}, #{auditing.accountType},#{auditing.orderFlag},#{auditing.reservationDatetime},#{auditing.batchNo},
			#{str},#{auditing.smsContent},#{auditing.smsCount},#{auditing.smsUnitCount},#{auditing.smsAccountNum},#{auditing.auditingStatus},#{auditing.auditingOperator},#{auditing.regiStrars},current_timestamp(),#{auditing.auditingDatetime},#{auditing.signTip})
		</foreach>
	</insert>
	
	<select id="loadAuditSms" resultMap="resultAuditing" >
    	<include refid="select"/>
		where 
			t.auditing_status = 200
		and 
			current_timestamp() - t.reservation_datetime >= 0 or reservation_datetime = null
		order by 
			t.create_datetime
		limit 0,300
    </select>
	
</mapper>